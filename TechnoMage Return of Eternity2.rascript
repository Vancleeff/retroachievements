// TechnoMage: Return of Eternity
// #ID = 16280

// $007A20: ====== INFO =======
// $007A24: ==== DIALOG ====
// $007A28: == INVENTORY ==
// $007A2C: ==== QUESTS ====
// $007A30: ===== PLAYER =====
// $010170: EQUIPMENT : Gloves of Dexterity ID (32-bit)
// $010188: EQUIPMENT : Experience Amulet ID (32-bit)
// $0101A0: EQUIPMENT : Merlin's Cape ID (32-bit)
// $0101B4: EQUIPMENT : Stoneskin Belt ID (32-bit)
// $0101C8: EQUIPMENT : Magic Amulet ID (32-bit)
// $091E84: PLAYER : Current Weapon ID (8-bit)
// $091E85: PLAYER : Current Spell ID (8-bit)
// $091E86: PLAYER : Current Tool ID (8-bit)
// $091E87: PLAYER : Current Accessory ID (8-bit)
// $091E88: INVENTORY : Weapon Slot (24-bit pointer)
// $091E8C: INVENTORY : Spell Slot (24-bit pointer)
// $091E90: INVENTORY : Tool Slot (24-bit pointer)
// $091E94: INVENTORY : Accessory Slot (24-bit pointer)
// $091E98: WEAPON : Dagger (24-bit pointer)
// $091E9C: WEAPON : Dagger icon (24-bit pointer)
// $091EA0: WEAPON : Dagger qty (8-bit)
// $091EA4: WEAPON : Sword Pointer (24-bit pointer)
// $091EA8: WEAPON : Sword icon (24-bit pointer)
// $091EAC: WEAPON : Sword qty (8-bit)
// $091EB0: WEAPON : War Mace Pointer (24-bit pointer)
// $091EB4: WEAPON : War Mace icon (24-bit pointer)
// $091EB8: WEAPON : War Mace qty (8-bit)
// $091EBC: WEAPON : Hammer Pointer (24-bit pointer)
// $091EC0: WEAPON : Hammer icon (24-bit pointer)
// $091EC4: WEAPON : Hammer qty (8-bit)
// $091EC8: WEAPON : Axe Pointer (24-bit pointer)
// $091ECC: WEAPON : Axe icon (24-bit pointer)
// $091ED0: WEAPON : Axe qty (8-bit)
// $091ED4: WEAPON : Bow Pointer (24-bit pointer)
// $091ED8: WEAPON : Bow icon (24-bit pointer)
// $091EDC: WEAPON : Bow qty (8-bit)
// $091EE0: WEAPON : Fire Bow Pointer (24-bit pointer)
// $091EE4: WEAPON : Fire Bow icon (24-bit pointer)
// $091EE8: WEAPON : Fire Bow qty (8-bit)
// $091EEC: WEAPON : Aquabow Pointer (24-bit pointer)
// $091EF0: WEAPON : Aquabow icon (24-bit pointer)
// $091EF4: WEAPON : Aquabow qty (8-bit)
// $091EF8: SPELL : Fireball Pointer (24-bit pointer)
// $091EFC: SPELL : Fireball icon (24-bit pointer)
// $091F00: SPELL : Fireball qty (8-bit)
// $091F04: SPELL : Ice Claw Pointer (24-bit pointer)
// $091F08: SPELL : Ice Claw icon (24-bit pointer)
// $091F0C: SPELL : Ice Claw qty (8-bit)
// $091F10: SPELL : Vipers' Vortex Pointer (24-bit pointer)
// $091F14: SPELL : Vipers' Vortex icon (24-bit pointer)
// $091F18: SPELL : Vipers' Vortex qty (8-bit)
// $091F1C: SPELL : Meteor Storm Pointer (24-bit pointer)
// $091F20: SPELL : Meteor Storm icon (24-bit pointer)
// $091F24: SPELL : Meteor Storm qty (8-bit)
// $091F28: SPELL : Magic Lightning Pointer (24-bit pointer)
// $091F2C: SPELL : Magic Lightning icon (24-bit pointer)
// $091F30: SPELL : Magic Lightning qty (8-bit)
// $091F34: SPELL : Magic Battle Shield Pointer (24-bit pointer)
// $091F38: SPELL : Magic Battle Shield icon (24-bit pointer)
// $091F3C: SPELL : Magic Battle Shield qty (8-bit)
// $091F40: SPELL : Earthquake Pointer (24-bit pointer)
// $091F44: SPELL : Earthquake icon (24-bit pointer)
// $091F48: SPELL : Earthquake qty (8-bit)
// $091F4C: EQUIPMENT : Ankh Amulet Pointer (24-bit pointer)
// $091F50: EQUIPMENT : Ankh Amulet icon (24-bit pointer)
// $091F54: EQUIPMENT : Ankh Amulet qty (8-bit)
// $091F58: EQUIPMENT : Ring of Life Pointer (24-bit pointer)
// $091F5C: EQUIPMENT : Ring of Life icon (24-bit pointer)
// $091F60: EQUIPMENT : Ring of Life qty (8-bit)
// $091F64: EQUIPMENT : Magic Amulet Pointer (24-bit pointer)
// $091F68: EQUIPMENT : Magic Amulet icon (24-bit pointer)
// $091F6C: EQUIPMENT : Magic Amulet qty (8-bit)
// $091F70: EQUIPMENT : Chain Mail Coat Pointer (24-bit pointer)
// $091F74: EQUIPMENT : Chain Mail Coat icon (24-bit pointer)
// $091F78: EQUIPMENT : Chain Mail Coat qty (8-bit)
// $091F7C: EQUIPMENT : Stoneskin Belt Pointer (24-bit pointer)
// $091F80: EQUIPMENT : Stoneskin Belt icon (24-bit pointer)
// $091F84: EQUIPMENT : Stoneskin Belt qty (8-bit)
// $091F88: EQUIPMENT : Merlin's Cape Pointer (24-bit pointer)
// $091F8C: EQUIPMENT : Merlin's Cape icon (24-bit pointer)
// $091F90: EQUIPMENT : Merlin's Cape qty (8-bit)
// $091F94: EQUIPMENT : Experience Amulet Pointer (24-bit pointer)
// $091F98: EQUIPMENT : Experience Amulet icon (24-bit pointer)
// $091F9C: EQUIPMENT : Experience Amulet qty (8-bit)
// $091FA0: EQUIPMENT : Gloves of Dexterity Pointer (24-bit pointer)
// $091FA4: EQUIPMENT : Gloves of Dexterity icon (24-bit pointer)
// $091FA8: EQUIPMENT : Gloves of Dexterity qty (8-bit)
// $091FAC: TOOLS : Bomb Pointer (24-bit pointer)
// $091FB0: TOOLS : Bomb icon (24-bit pointer)
// $091FB4: TOOLS : Bomb qty (8-bit)
// $091FB8: TOOLS : Radar Pointer (24-bit pointer)
// $091FBC: TOOLS : Radar icon (24-bit pointer)
// $091FC0: TOOLS : Radar qty (8-bit)
// $091FC4: TOOLS : Boots of Speed Pointer (24-bit pointer)
// $091FC8: TOOLS : Boots of Speed icon (24-bit pointer)
// $091FCC: TOOLS : Boots of Speed qty (8-bit)
// $091FD0: TOOLS : Grappling Hook Pointer (24-bit pointer)
// $091FD4: TOOLS : Grappling Hook icon (24-bit pointer)
// $091FD8: TOOLS : Grappling Hook qty (8-bit)
// $092000: ITEM : Small Healing Potion Pointer (24-bit pointer)
// $092004: ITEM : Small Healing Potion icon (24-bit pointer)
// $092008: ITEM : Small Healing Potion qty (8-bit)
// $092060: ITEM : Magic Cube (STR) Pointer (24-bit pointer)
// $092064: ITEM : Magic Cube (STR) icon (24-bit pointer)
// $092068: ITEM : Magic Cube (STR) qty (8-bit)
// $09206C: ITEM : Magic Cube (INT) Pointer (24-bit pointer)
// $092070: ITEM : Magic Cube (INT) icon (24-bit pointer)
// $092074: ITEM : Magic Cube (INT) qty (8-bit)
// $092078: ITEM : Magic Cube (CON) Pointer (24-bit pointer)
// $09207C: ITEM : Magic Cube (CON) icon (24-bit pointer)
// $092080: ITEM : Magic Cube (CON) qty (8--bit)
// $092084: ITEM : Magic Cube (MYS) Pointer (24-bit pointer)
// $092088: ITEM : Magic Cube (MYS) icon (24-bit pointer)
// $09208C: ITEM : Magic Cube (MYS) qty (8-bit)
// $092090: ITEM : Copper Key Pointer (24-bit pointer)
// $092094: ITEM : Copper Key icon (24-bit pointer)
// $092098: ITEM : Copper Key qty (8-bit)
// $09209C: ITEM : Silver Key Pointer (24-bit pointer)
// $0920A0: ITEM : Silver Key icon (24-bit pointer)
// $0920A4: ITEM : Silver Key qty (8-bit)
// $0920B4: ITEM : Steel Key Pointer (24-bit pointer)
// $0920B8: ITEM : Steel Key icon (24-bit pointer)
// $0920BC: ITEM : Steel Key qty (8-bit)
// $0920E4: ITEM : Compass Pointer (24-bit pointer)
// $0920E8: ITEM : Compass icon (24-bit pointer)
// $0920EC: ITEM : Compass qty (8-bit)
// $0920F0: ITEM : Chalk Pointer (24-bit pointer)
// $0920F4: ITEM : Chalk icon (24-bit pointer)
// $0920F8: ITEM : Chalk qty (8-bit)
// $0920FC: ITEM : Coins Pointer (24-bit pointer)
// $092100: ITEM : Coins icon (24-bit pointer)
// $092104: ITEM : GOLD (32-bit)
// $092108: ITEM : Green Crystal Pointer (24-bit pointer)
// $09210C: ITEM : Green Crystal icon (24-bit pointer)
// $092110: ITEM : Green Crystal qty (8-bit)
// $092114: ITEM : Yellow Crystal Pointer (24-bit pointer)
// $092118: ITEM : Yellow Crystal icon (24-bit pointer)
// $09211C: ITEM : Yellow Crystal qty (8-bit)
// $092120: ITEM : Blue Crystal Pointer (24-bit pointer)
// $092124: ITEM : Blue Crystal icon (24-bit pointer)
// $092128: ITEM : Blue Crystal qty (8-bit)
// $09212C: ITEM : Red Crystal Pointer (24-bit pointer)
// $092130: ITEM : Red Crystal icon (24-bit pointer)
// $092134: ITEM : Red Crystal qty (8-bit)
// $092138: ITEM : White Crystal Pointer (24-bit pointer)
// $09213C: ITEM : White Crystal icon (24-bit pointer)
// $092140: ITEM : White Crystal qty (8-bit)
// $092180: ITEM : Dark Distress Pointer (24-bit pointer)
// $092184: ITEM : Dark Distress icon (24-bit pointer)
// $092188: ITEM : Dark Distress qty (8-bit)
// $092198: ITEM : Crowbar (24-bit pointer)
// $09219C: ITEM : Crowbar icon (24-bit pointer)
// $0921A0: ITEM : Crowbar qty (8-bit)
// $0921BC: ITEM : Cork (32-Bit)
// $0921C4: ITEM : CORK COUNT (8-bit)
// $0921E0: ITEM : Tempo's Stew (24-Bit pointer)
// $0921E4: ITEM : Tempo's Stew icon (24-Bit pointer)
// $0921E8: ITEM : Tempo's Stew qty (8-Bit)
// $0921EC: ITEM : Tempo's Stew with Castor oil (24-Bit pointer)
// $0921F0: ITEM : Tempo's Stew with Castor oil icon (24-Bit pointer)
// $0921F4: ITEM : Tempo's Stew with Castor oil qty (24-Bit pointer)
// $092204: ITEM : Control Wheel (24-Bit pointer)
// $092208: ITEM : Control Wheel icon (24-Bit pointer)
// $09220C: ITEM : Control Wheel qty (8-bit)
// $099557: CGI running
// $099561: CGI running
// $09FC10: EQUIPMENT : Chain Mail Coat ID (32-bit)
// $09FC20: EQUIPMENT : Ring of Life ID (32-bit)
// $09FC30: EQUIPMENT : Ankh Amulet ID (32-bit)
// $09FC40: SPELL : Earthquake ID (32-bit)
// $09FC78: SPELL : Viper's Vortex ID (32-bit)
// $09FC84: SPELL : Ice Claw ID (32-bit)
// $09FC90: SPELL : Fire Ball ID (32-bit)
// $09FC9C: WEAPON : Aqua Bow ID (32-bit)
// $09FCAC: WEAPON : Fire Bow ID (32-bit)
// $09FCB8: WEAPON : Bow ID (32-bit)
// $09FCC8: WEAPON : Axe ID (32-bit)
// $09FCD0: WEAPON : Hammer ID (32-bit)
// $09FCE0: WEAPON : War Mace ID (32-bit)
// $09FCEC: WEAPON : Sword ID (32-bit)
// $09FCFC: WEAPON : Dagger ID (32-bit)
// $0A0528: MAP : ON/OFF (8-bit)
// $0A0534: QUESTLOG : ON/OFF (8-bit)

// $0A3ACC: MAP : Completion % PART A  (8-bits)
// $0A3ACD: MAP : Completion % PART B (8-bits)
// $0A3ACE: MAP : Completion % PART C  (8-bits)
// $0A3ACF: MAP : Completion % PART D (8-bits)
// $0A3AD0: MAP : Completion % PART E  (8-bits)
// $0A3AD1: MAP : Completion % PART F  (8-bits)
// $0A3AD2: MAP : Completion % PART G  (8-bits)
// $0A3AD3: MAP : Completion % PART H  (8-bits)
// $0A3F14: DIALOG : Pointer
// $0A4098: PLAYER : Light emission (16-bit)
// $0A40D8: DIALOG : Choice selector (8-bits)
//          00 = Yes
//          01 = No
// $0A4118: DIALOG : Dialog Box type (8-bit)
//          00 : No dialog box
//          01 : Dialog box without faceset
//          02 : Dialog box with faceset
//          03 : Dialog box with choices
// $0A411C: DIALOG : State (8-bit)
//          02 : NPC Dialog
//          03 : Dialog without speaker
//          04 : No Dialog
// $0AB91C: PLAYER : XP (32-bit)
// $0AB930: PLAYER : MP (8-bit)
// $0AB93C: PLAYER : LVL (8-bit)
// $0AB93D: PLAYER : STR (8-bit)
// $0AB93E: PLAYER : INT (8-bit)
// $0AB93F: PLAYER : CONS (8-bit)
// $0AB940: PLAYER : MYS (8-bit)
// $0ABA54: QUEST : ID Slot 1(32-bits)
// $0ABA63: QUEST : Completion bool Slot 1 (8-bit)
// $0ABA64: QUEST : Pointer Slot 1 (32-bit)
// $0ABA68: QUEST : ID Slot 2 (32-bits)
// $0ABA77: QUEST : Completion bool Slot 2 (8-bit)
// $0ABA78: QUEST : Pointer Slot 2 (32-bit)
// $0ABA7C: QUEST : ID Slot 3 (32-bits)
// $0ABA8B: QUEST : Completion bool Slot 3 (8-bit)
// $0ABA8C: QUEST : Pointer Slot 3 (32-bit)
// $0ABA90: QUEST : ID Slot 4 (32-bits)
// $0ABA9F: QUEST : Completion bool Slot 4 (8-bit)
// $0ABAA0: QUEST : Pointer Slot 4 (32-bit)
// $0ABAA4: QUEST : ID Slot 5 (32-bits)
// $0ABAB3: QUEST : Completion bool Slot 5 (8-bit)
// $0ABAB4: QUEST : Pointer Slot 5 (32-bit)
// $0ABAB8: QUEST : ID Slot 6 (32-bits)
// $0ABAC7: QUEST : Completion bool Slot 6 (8-bit)
// $0ABAC8: QUEST : Pointer Slot 6 (32-bit)
// $0ABACC: QUEST : ID Slot 7 (32-bits)
// $0ABADB: QUEST : Completion bool Slot 7 (8-bit)
// $0ABADC: QUEST : Pointer Slot 7 (32-bit)
// $0ABAE0: QUEST : ID Slot 8 (32-bits)
// $0ABAEF: QUEST : Completion bool Slot 8 (8-bit)
// $0ABAF0: QUEST : Pointer Slot 8 (32-bit)
// $0ABAF4: QUEST : ID Slot 9 (32-bits)
// $0ABB03: QUEST : Completion bool Slot 9 (8-bit)
// $0ABB04: QUEST : Pointer Slot 9 (32-bit)
// $0ABB08: QUEST : ID Slot 10 (32-bits)
// $0ABB17: QUEST : Completion bool Slot 10 (8-bit)
// $0ABB18: QUEST : Pointer Slot 10 (32-bit)
// $0ABB1C: QUEST : ID Slot 11 (32-bits)
// $0ABB2B: QUEST : Completion bool Slot 11 (8-bit)
// $0ABB2C: QUEST : Pointer Slot 11 (32-bit)
// $0ABB30: QUEST : ID Slot 12 (32-bits)
// $0ABB3F: QUEST : Completion bool Slot 12 (8-bit)
// $0ABB40: QUEST : Pointer Slot 12 (32-bit)
// $0ABF7A: CAMERA : Cinema mode boolean (8-bit)
// $0AF5C0: DIALOG : Last/current dialog played
// $0B71E0: GLOBAL : Event ID (32-bit)
// $0BC378: INVENTORY : Slot 1 (24-bit pointer)
// $0BC37C: INVENTORY : Slot 2 (24-bit pointer)
// $0BC380: INVENTORY : Slot 3 (24-bit pointer)
// $0BC384: INVENTORY : Slot 4 (24-bit pointer)
// $0BC388: INVENTORY : Slot 5 (24-bit pointer)
// $0BC38C: INVENTORY : Slot 6 (24-bit pointer)
// $0BC390: INVENTORY : Slot 7 (24-bit pointer)
// $0BC394: INVENTORY : Slot 8 (24-bit pointer)
// $0BC398: INVENTORY : Slot 9 (24-bit pointer)
// $0BC39C: INVENTORY : Slot 10 (24-bit pointer)
// $0BC3A0: INVENTORY : Slot 11 (24-bit pointer)
// $0BC3A4: INVENTORY : Slot 12 (24-bit pointer)
// $0BC3A8: INVENTORY : Slot 13 (24-bit pointer)
// $0BC3AC: INVENTORY : Slot 14 (24-bit pointer)
// $0BC3B0: INVENTORY : Slot 15 (24-bit pointer)
// $0BC3B4: INVENTORY : Slot 16 (24-bit pointer)
// $0BC3B8: INVENTORY : Slot 17 (24-bit pointer)
// $0BC3BC: INVENTORY : Slot 18 (24-bit pointer)
// $0BC3C0: INVENTORY : Slot 19 (24-bit pointer)
// $0BC3C4: INVENTORY : Slot 20 (24-bit pointer)
// $0BC3C8: INVENTORY : Slot 21 (24-bit pointer)
// $0BC3CC: INVENTORY : Slot 22 (24-bit pointer)
// $0BC3D0: INVENTORY : Slot 23 (24-bit pointer)
// $0BC3D4: INVENTORY : Slot 24 (24-bit pointer)
// $0BC3D8: INVENTORY : Slot 25 (24-bit pointer)
// $0BC3DC: INVENTORY : Slot 26 (24-bit pointer)
// $0BC3E0: INVENTORY : Slot 27 (24-bit pointer)
// $139440: STEAMERTOWN : Water Tank Wheel animation (8-bit)
// $139D03: PUZZLE : THE VOLCANO - DUNGEON LVL 2  - Solved Switch (8-bit)
// $1A8828: To investigate : Pointers FROM 1a8828 TO 1a897c
// $1A9428: To investigate : Pointers FROM 1a9428 TO 1a9a48
// $1B77A3: CHEST : Open state BOOL (8-bit)
// $1BC657: CHEST : Open state BOOL (8-bit)
// $1C2F20: Camera position
// $1C303E: ENV : PUNCHING BALL #2 COLLIDER (8-bit)
// $1C32B8: ENV : PUNCHING BALL #1 COLLIDER (8-bit)
// $1C3510: FOE : Giant rat ATK sound (32-bit)
// $1C351C: FOE : Rat Boss ATK animation (32-bit)
// $1C35D0: FOE : Rat Boss HP Value (16-bit)
//          001c = Full HP (28HP)
// $1C35D2: FOE : Rat Boss Interesting Value (8-bit)
//          
//          06 = Default; stays unaltered when defeating the boss
//          Manually decreasing seems to
//          05 = Make the boss invisible
//          04 = Spawn a yellow podest like structure (Hive?)
//          03 = Invisible again
//          02 = Spawns compass and completely despawns boss, compass seems to spawn a lot of times in succession, casuing big lag
//          01 (only works when it was changed to 02 beforehand) = Plays the boss defeated sound, spawns the compass one last time and leaves a quiver on the ground where the boss was
//          00 = Despawns the spawned quiver like structure
// $1C36D2: FOE : first rat speed (8-bit)
// $1C36DC: FOE : First rat z-index (8-bit)
// $1C36DD: FOE : First rat alpha (8-bit)
// $1C36E3: FOE : First rat MAX HP (8-bit)
// $1C36E4: FOE : First rat CURR HP (8-bit)
// $1C36E6: FOE : First rat visibility (8-bit)
// $1C3758: TEXTURE : Melvin's head (32-bits)
// $1C3804: ANIMATION : Melvin (32-bit)
// $1C3A20: PLAYER : HP (8-bit)
// $1C3A24: PLAYER : Animation (8-bit)
//          00 = Standing
//          01 = Walking
//          02 = Dagger & Sword Swing
//          03 = Bow Draw
//          04 = Spell Cast
//          05 = ? (WIP)
//          06 = ? (WIP)
//          07 = Jump
//          08 = Fall
//          09 = Crate Push
//          0a = Crate Pull
//          0b = ? (WIP)
//          0c = Grappling Hook Launch
//          0d = ? (WIP)
//          0e = Death
// $1C3A28: To investigate : Pointers FROM 1C3a208 TO 1C3aec
// $1CE75C: TARGET #1 (32-bit)
// $1CE794: TARGET #2 (32-bit)
// $1DA6EC: SOUND : Music Player & Dialogue Pointer (32-bit); Points towards Music IDs or voice acted dialogs IDs
// $1DA6F4: SOUND : Music played(16-bit)
// $1F1483: NPC : Lars CORK qty (8-bit)
// $1F14B2: STEAMERTOWN : Water Tank #1 lvl (8-bit)
// $1F14B3: STEAMERTOWN : Water Tank #2 lvl (8-bit)
// $1F14B4: STEAMERTOWN : Water Tank #3 lvl (8-bit)

// $0A1740: GLOBAL : Chapter ID (8-bit)
ChapterID = byte(0x0A1740)
// $0A1744: GLOBAL : Room ID (8-bit)
RoomID = byte(0x0A1744)
// $1C3A24: PLAYER : Animation (8-bit)
PlayerAnim = byte(0x1C3A24)
PlayerAnimList = {
    "STAND"  : 00,
    "WALK"   : 01,
    "WEAPON" : 02,
    "BOW"    : 03,
    "SPELL"  : 04,
    "JUMP"   : 07,
    "FALL"   : 08,
    "PUSH"   : 09,
    "PULL"   : 10,
    "HOOK"   : 12,
    "DIE"    : 14,
}
// These addresses contain the current Event id, it can be a dialog, a starting quest, a solved puzzle or even a played music.
// The problem is that when the ID change, the placeholders are not flushed and if the event A is longer than event B,
// the residual part of event A will still be there so it's important to always check on the most significative and unique
// part of the Event ID and truncate after the last full covered byte to avoid previous residual parts. 
EventPlaceHolder = [
    dword(0x0b71e0),
    dword(0x0b71e4),
    dword(0x0b71e8),
    dword(0x0b71ec),
    dword(0x0b71f0),
    dword(0x0b71f4),
    dword(0x0b71f8),
    dword(0x0b71fc),
]

EventPlaceHolderStart = 0x0b71e0

//Compare two array of value and return an array of checks
function CompareArrays(src, with){
  res = []
    for i in range(0, length(src) - 1) {
       array_push(res, src[i] == with[i])
    }
    return res
}

//Compare two array of value and return an array of checks
function CompareStrToAddress(src, start){
  res = []
    for i in range(0, length(src) - 1) {
       array_push(res, ascii_string_equals(byte((start + i * 0x01)), substring(src, i, 1)) )
    }
    return res
}


//Check wether the player performs a transition between two chapters. Used to trigger story related achievements.
function ChapterTransition(last, next) => prev(ChapterID) == last && ChapterID == next

//Check if the player is in a specific gamestage which consists on a pair of current chapter and room
function CheckGameStage(chapter, room) => ChapterID == chapter && RoomID == room

//Return the value of the player animation (8-bit)
function GetAnimValue(key) => PlayerAnimList[key]



achievement(
    title = "t", points = 2,
    description = "test",
    trigger = CheckGameStage(4, 0x18) && all_of(CompareStrToAddress("DUNA_FIRSTSEAL", EventPlaceHolderStart), a => a)
)

achievement(
    title = "A Fresh Start For Glacnore", points = 1,
    description = "Give Glacnore 5 golds for his information",
    id = 402912, badge = "455829", published = "26-02-24 23:24:06", modified = "26-02-24 23:24:06",
    trigger =  CheckGameStage(1,8) && all_of(CompareArrays([1095517985, 1380929091, 1229414213, 1313424726, 20294], EventPlaceHolder), a => a)
)

achievement(
    title = "Thirst For Knowledge", points = 2,
    description = "Read all the 7 books at the Library of Dreamertown",
    id = 402913, badge = "455830", published = "26-02-24 23:24:32", modified = "26-02-24 23:24:32",
    trigger = byte(0x0A1740) == 1 && byte(0x0A1744) == 9 && tally(7, 
                  once(dword(0x0B71E8) == 1397053783), 
                  once(dword(0x0B71E8) == 1498629443), 
                  once(dword(0x0B71E4) == 1597321291), 
                  once(dword(0x0B71E4) == 1597386827), 
                  once(dword(0x0B71E4) == 1597452363), 
                  once(dword(0x0B71E4) == 1597255755), 
                  once(dword(0x0B71E4) == 1597190219), 
              byte(0x091E8C) > 0)
)

achievement(
    title = "Family Business", points = 5,
    description = "Visit your Uncle Rissen",
    id = 402914, badge = "455831", published = "26-02-24 23:24:58", modified = "26-02-24 23:24:58",
    trigger = byte(0x0A1740) == 1 && byte(0x0A1744) == 11 && dword(0x0B71E0) == 1397967186 && dword(0x0B71E4) ==
               828329541 && dword(0x0B71E8) == 1263288660 &&
              (((byte(0x0ABA63) == 1 && dword(0x0ABA64) == 2148854664)) ||
               ((byte(0x0ABA77) == 1 && dword(0x0ABA78) == 2148854664)) ||
               ((byte(0x0ABA8B) == 1 && dword(0x0ABA8C) == 2148854664)) ||
               ((byte(0x0ABA9F) == 1 && dword(0x0ABAA0) == 2148854664)) ||
               ((byte(0x0ABAB3) == 1 && dword(0x0ABAB4) == 2148854664)) ||
               ((byte(0x0ABAC7) == 1 && dword(0x0ABAC8) == 2148854664)) ||
               ((byte(0x0ABADB) == 1 && dword(0x0ABADC) == 2148854664)) ||
               ((byte(0x0ABAEF) == 1 && dword(0x0ABAF0) == 2148854664)) ||
               ((byte(0x0ABB03) == 1 && dword(0x0ABB04) == 2148854664)) ||
               ((byte(0x0ABB17) == 1 && dword(0x0ABB18) == 2148854664)) ||
               ((byte(0x0ABB2B) == 1 && dword(0x0ABB2C) == 2148854664)) ||
               ((byte(0x0ABB3F) == 1 && dword(0x0ABB40) == 2148854664)))
)

achievement(
    title = "Toothpick", points = 5,
    description = "Find the Dagger",
    id = 402916, badge = "455833", published = "26-02-24 23:33:52", modified = "26-02-24 23:33:52",
    trigger = byte(0x0A1740) == 1 && byte(0x0A1744) == 11 && prev(byte(0x091EA0)) == 0 && byte(0x091EA0) == 1
)

achievement(
    title = "None Shall Compass", points = 5,
    description = "Kill the giant rat and get the compass",
    id = 402917, badge = "455834", published = "26-02-24 23:34:49", modified = "26-02-24 23:34:49",
    trigger = byte(0x0A1740) == 1 && byte(0x0A1744) == 11 && byte(0x1C36E4) == 0 && (dword(0x0B71E0) == 1347243843 ||
               prior(dword(0x0B71E0)) == 1347243843) && (dword(0x0B71E4) == 1599296321 || prior(dword(0x0B71E4)) ==
               1599296321) && (dword(0x0B71E8) == 1314213702 || prior(dword(0x0B71E8)) == 1314213702)
)

achievement(
    title = "Unusual Quest", points = 3,
    description = "Clear the rats from Mr Vesnegg's cellar",
    id = 402918, badge = "455835", published = "26-02-24 23:35:43", modified = "26-02-24 23:35:43",
    trigger = byte(0x0A1740) == 1 && byte(0x0A1744) == 2 &&
              ((prev(byte(0x0ABA63)) == 0 && byte(0x0ABA63) == 1 && dword(0x0ABA54) == 1398030674) ||
               (prev(byte(0x0ABA77)) == 0 && byte(0x0ABA77) == 1 && dword(0x0ABA68) == 1398030674) ||
               (prev(byte(0x0ABA8B)) == 0 && byte(0x0ABA8B) == 1 && dword(0x0ABA7C) == 1398030674) ||
               (prev(byte(0x0ABA9F)) == 0 && byte(0x0ABA9F) == 1 && dword(0x0ABA90) == 1398030674) ||
               (prev(byte(0x0ABAB3)) == 0 && byte(0x0ABAB3) == 1 && dword(0x0ABAA4) == 1398030674) ||
               (prev(byte(0x0ABAC7)) == 0 && byte(0x0ABAC7) == 1 && dword(0x0ABAB8) == 1398030674) ||
               (prev(byte(0x0ABADB)) == 0 && byte(0x0ABADB) == 1 && dword(0x0ABACC) == 1398030674) ||
               (prev(byte(0x0ABAEF)) == 0 && byte(0x0ABAEF) == 1 && dword(0x0ABAE0) == 1398030674) ||
               (prev(byte(0x0ABB03)) == 0 && byte(0x0ABB03) == 1 && dword(0x0ABAF4) == 1398030674) ||
               (prev(byte(0x0ABB17)) == 0 && byte(0x0ABB17) == 1 && dword(0x0ABB08) == 1398030674) ||
               (prev(byte(0x0ABB2B)) == 0 && byte(0x0ABB2B) == 1 && dword(0x0ABB1C) == 1398030674) ||
               (prev(byte(0x0ABB3F)) == 0 && byte(0x0ABB3F) == 1 && dword(0x0ABB30) == 1398030674))
)

achievement(
    title = "It's Just The Beginning", points = 2,
    description = "Reach level 2",
    id = 402919, badge = "455836", published = "26-02-24 23:36:13", modified = "26-02-24 23:36:13",
    trigger = prev(byte(0x0AB93C)) == 1 && byte(0x0AB93C) == 2
)

achievement(
    title = "Chapter 2", points = 10,
    description = "Leave Dreamertown",
    id = 402920, badge = "455837", published = "26-02-24 23:36:20", modified = "26-02-24 23:36:20",
    trigger = prior(byte(0x0A1740)) == 1 && byte(0x0A1740) == 2
)

achievement(
    title = "Cube Of Strength", points = 3,
    description = "Get a magic cube of strength",
    id = 402921, badge = "455838", published = "26-02-24 23:49:15", modified = "26-02-24 23:49:15",
    trigger = prev(dword(0x092068)) == 0 && dword(0x092068) >= 1
)

achievement(
    title = "Bon Appetit", points = 3,
    description = "Get rid of Baras",
    id = 402922, badge = "455839", published = "26-02-24 23:59:06", modified = "26-02-24 23:59:06",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 8 && prev(byte(0x0921F4)) == 1 && byte(0x0921F4) == 0
)

achievement(
    title = "Now We Are Talking", points = 5,
    description = "Find the Sword",
    id = 402923, badge = "455840", published = "27-02-24 00:03:16", modified = "27-02-24 00:03:16",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 22 && prev(byte(0x091EAC)) == 0 && byte(0x091EAC) == 1
)

achievement(
    title = "Are You Ore-kay Rumtok", points = 3,
    description = "Save Rumtok the miner",
    id = 402925, badge = "455842", published = "27-02-24 00:21:48", modified = "27-02-24 00:21:48",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 5 && prev(byte(0x0921A0)) == 0 && byte(0x0921A0) == 1
)

achievement(
    title = "On Fire", points = 5,
    description = "Find out what's going on at the graveyard and learn the Fireball spell",
    id = 402926, badge = "455843", published = "27-02-24 00:30:37", modified = "27-02-24 00:30:37",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 13 && prev(byte(0x091F00)) == 0 && byte(0x091F00) == 1
)

achievement(
    title = "I See Dead People", points = 5,
    description = "Reach the end of the Crypt and get the Ankh Amulet",
    id = 403069, badge = "456007", published = "27-02-24 18:25:36", modified = "27-02-24 18:25:36",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 3 && prev(byte(0x091F54)) == 0 && byte(0x091F54) == 1
)

achievement(
    title = "Open Day", points = 3,
    description = "Gain access to your father's house",
    id = 403070, badge = "456008", published = "27-02-24 18:32:51", modified = "27-02-24 18:32:51",
    trigger = byte(0x0A1740) == 2 && prior(byte(0x0A1744)) == 8 && byte(0x0A1744) == 19
)

achievement(
    title = "Hopscotch", points = 5,
    description = "Kill the Scrapyard Monster and get the control wheele",
    id = 403071, badge = "456063", published = "27-02-24 19:31:12", modified = "27-02-24 19:31:12",
    trigger = byte(0x0A1740) == 2 && byte(0x0A1744) == 11 && prev(byte(0x09220C)) == 0 && byte(0x09220C) == 1
)

achievement(
    title = "Resourceful", points = 5,
    description = "Seal the burst steam pipes without buying a cork from Lars",
    id = 403079, badge = "456067", published = "27-02-24 21:30:50", modified = "27-02-24 21:30:50",
    trigger = byte(0x0A1740) == 2 && byte(0x1F1483) == 1 &&
              ((prev(byte(0x0ABA63)) == 0 && byte(0x0ABA63) == 1 && dword(0x0ABA54) == 1263685443) ||
               (prev(byte(0x0ABA77)) == 0 && byte(0x0ABA77) == 1 && dword(0x0ABA68) == 1263685443) ||
               (prev(byte(0x0ABA8B)) == 0 && byte(0x0ABA8B) == 1 && dword(0x0ABA7C) == 1263685443) ||
               (prev(byte(0x0ABA9F)) == 0 && byte(0x0ABA9F) == 1 && dword(0x0ABA90) == 1263685443) ||
               (prev(byte(0x0ABAB3)) == 0 && byte(0x0ABAB3) == 1 && dword(0x0ABAA4) == 1263685443) ||
               (prev(byte(0x0ABAC7)) == 0 && byte(0x0ABAC7) == 1 && dword(0x0ABAB8) == 1263685443) ||
               (prev(byte(0x0ABADB)) == 0 && byte(0x0ABADB) == 1 && dword(0x0ABACC) == 1263685443) ||
               (prev(byte(0x0ABAEF)) == 0 && byte(0x0ABAEF) == 1 && dword(0x0ABAE0) == 1263685443) ||
               (prev(byte(0x0ABB03)) == 0 && byte(0x0ABB03) == 1 && dword(0x0ABAF4) == 1263685443) ||
               (prev(byte(0x0ABB17)) == 0 && byte(0x0ABB17) == 1 && dword(0x0ABB08) == 1263685443) ||
               (prev(byte(0x0ABB2B)) == 0 && byte(0x0ABB2B) == 1 && dword(0x0ABB1C) == 1263685443) ||
               (prev(byte(0x0ABB3F)) == 0 && byte(0x0ABB3F) == 1 && dword(0x0ABB30) == 1263685443))
)

achievement(
    title = "Plumber", points = 5,
    description = "Resolve the water tank puzzle in SteamerTown in as few turns as possible",
    id = 403081, badge = "456070", published = "27-02-24 22:29:34", modified = "27-02-24 22:29:34",
    trigger = prior(byte(0x1F14B2)) == 3 && byte(0x1F14B2) == 2 && prior(byte(0x1F14B3)) == 3 && byte(0x1F14B3) == 2 && 
              prior(byte(0x1F14B4)) == 0 && byte(0x1F14B4) == 2 && unless(tally(5, 
                  (prev(byte(0x139440)) == 0 && byte(0x139440) == 1), 
              byte(0x091E86) == 4))
)

achievement(
    title = "Chapter 3", points = 10,
    description = "Get the Ring of Life and enter The Hive",
    id = 403082, badge = "456071", published = "27-02-24 22:31:46", modified = "27-02-24 22:31:46",
    trigger = prior(byte(0x0A1740)) == 2 && byte(0x0A1740) == 3
)

achievement(
    title = "Ferdinand Magellan", points = 3,
    description = "Discover 100% of the map in The Hive - Entrance",
    id = 403083, badge = "456072", published = "27-02-24 22:44:04", modified = "27-02-24 22:44:04",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 1 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD0) == 255 && byte(0x0A3AD1) == 255 && 
              byte(0x0A3AD2) == 255
)

achievement(
    title = "Mystic Wisdom", points = 1,
    description = "Reach lvl 7 in Mysticism and unlock the first perk",
    id = 403087, badge = "456073", published = "27-02-24 23:16:03", modified = "27-02-24 23:16:03",
    trigger = (dword(0x0AF5C0) != 2148861960 && dword(0x0AF5C0) != 2148862036 && dword(0x0AF5C0) != 2148862128 &&
               dword(0x0AF5C0) != 2148861866 && dword(0x0AF5C0) != 2148862214) && prior(byte(0x0AB940)) < 7 && 
              byte(0x0AB940) >= 7
)

achievement(
    title = "Rothschild", points = 5,
    description = "Have 500 gold in your pockets",
    id = 403088, badge = "456074", published = "27-02-24 23:16:12", modified = "27-02-24 23:16:12",
    trigger = prev(dword(0x092104)) < 500 && dword(0x092104) >= 500
)

achievement(
    title = "Father And Son", points = 5,
    description = "Find your father somewhere in the Hive and get the Bombs",
    id = 403089, badge = "456075", published = "27-02-24 23:20:20", modified = "27-02-24 23:20:20",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 2 && prev(byte(0x091FB4)) == 0 && byte(0x091FB4) == 1
)

achievement(
    title = "Marco Polo", points = 3,
    description = "Discover 100% of the map in The Hive - Godon",
    id = 403090, badge = "456077", published = "27-02-24 23:24:07", modified = "27-02-24 23:24:07",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 2 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD0) == 255 && byte(0x0A3AD1) == 255 && 
              byte(0x0A3AD2) == 255 && byte(0x0A3AD3) == 15
)

achievement(
    title = "Francisco Pizarro", points = 3,
    description = "Discover 100% of the map in The Hive - Passage",
    id = 403091, badge = "456082", published = "27-02-24 23:33:47", modified = "27-02-24 23:33:47",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 3 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD0) == 255 && byte(0x0A3AD1) == 127
)

achievement(
    title = "Don't Mace With Me", points = 5,
    description = "Get the War Mace",
    id = 403092, badge = "456079", published = "27-02-24 23:34:47", modified = "27-02-24 23:34:47",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 4 && prev(byte(0x091EB8)) == 0 && byte(0x091EB8) == 1
)

achievement(
    title = "Henry Hudson", points = 3,
    description = "Discover 100% of the map in The Hive - Fredo",
    id = 403093, badge = "456083", published = "27-02-24 23:42:00", modified = "27-02-24 23:42:00",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 4 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD0) == 255 && byte(0x0A3AD1) == 31
)

achievement(
    title = "I Know It Was You Fredo", points = 5,
    description = "Meet Fredo and learn the Ice Claw spell",
    id = 403094, badge = "456081", published = "27-02-24 23:42:32", modified = "27-02-24 23:42:32",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 4 && prev(byte(0x091F0C)) == 0 && byte(0x091F0C) == 1
)

achievement(
    title = "Vasco Da Gama", points = 3,
    description = "Discover 100% of the map in The Hive - Labyrinth",
    id = 403096, badge = "456085", published = "28-02-24 00:13:04", modified = "28-02-24 00:13:04",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 5 && never(word(0x1DA6F4) != 6064) && byte(0x0A3ACC) == 255 && 
              byte(0x0A3ACD) == 255 && byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD0) == 255
)

achievement(
    title = "Tough Boy", points = 2,
    description = "Increase your Strength to 10",
    id = 403098, badge = "456087", published = "28-02-24 00:22:03", modified = "28-02-24 00:22:03",
    trigger = (dword(0x0AF5C0) != 2148861960 && dword(0x0AF5C0) != 2148862036 && dword(0x0AF5C0) != 2148862128 &&
               dword(0x0AF5C0) != 2148861866 && dword(0x0AF5C0) != 2148862214) && prior(byte(0x0AB93D)) < 10 && 
              byte(0x0AB93D) >= 10
)

achievement(
    title = "RPG Scenarists Loves Crystals", points = 5,
    description = "Get the Green Crystal",
    id = 403099, badge = "456088", published = "28-02-24 00:33:49", modified = "28-02-24 00:33:49",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 7 && prev(byte(0x092110)) == 0 && byte(0x092110) == 1
)

achievement(
    title = "Bartolomeu Dias", points = 3,
    description = "Discover 100% of the map in The Hive - Steep Tauron",
    id = 403116, badge = "456089", published = "28-02-24 00:37:49", modified = "28-02-24 00:37:49",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 7 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255
)

achievement(
    title = "Christopher Columbus", points = 3,
    description = "Discover 100% of the map in The Hive - Graves",
    id = 403117, badge = "456090", published = "28-02-24 00:48:53", modified = "28-02-24 00:48:53",
    trigger = byte(0x0A1740) == 3 && byte(0x0A1744) == 9 && byte(0x0A3ACC) == 255 && byte(0x0A3ACD) == 255 && 
              byte(0x0A3ACE) == 255 && byte(0x0A3ACF) == 255 && byte(0x0A3AD1) == 255 && byte(0x0A3AD2) == 255 && 
              byte(0x0A3AD3) == 31
)

achievement(
    title = "Cube Of Intelligence", points = 3,
    description = "Get a magic cube that increase your intelligence",
    id = 403118, badge = "456091", published = "28-02-24 00:52:07", modified = "28-02-24 00:52:07",
    trigger = prev(dword(0x092074)) == 0 && dword(0x092074) >= 1
)

achievement(
    title = "Chapter 4", points = 10,
    description = "Kill the giant spider and reach the Fairy Forest",
    id = 403119, badge = "456092", published = "28-02-24 00:52:18", modified = "28-02-24 00:52:18",
    trigger = prior(byte(0x0A1740)) == 3 && byte(0x0A1740) == 4
)

achievement(
    title = "Rookie", points = 3,
    description = "Reach level 5",
    id = 403120, badge = "456093", published = "28-02-24 00:52:35", modified = "28-02-24 00:52:35",
    trigger = prev(byte(0x0AB93C)) == 4 && byte(0x0AB93C) == 5
)


